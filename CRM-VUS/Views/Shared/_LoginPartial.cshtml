@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var isAdmin = User.IsInRole("Admin");
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (isAdmin){
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Карина</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-light">Выйти</button>
                </form>
            </li>
        }
        else{
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity?.Name!</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-light">Выйти</button>
                </form>
            </li>
        }
}
else
{
    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" white" asp-page="/Account/Register">Зарегистрироваться</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Войти</a>
    </li>
}
</ul>
